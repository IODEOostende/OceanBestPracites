AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Describes the infrasture needed to index Ocean Best Practices metadata and text documents.

Parameters:

  Environment:
    Type: String
    Description: staging, prod, or a development environment uniquely named across CF templates like stark
    Default: staging

  ElasticSearchHost:
    Type: String
    Description: The Elastic Search host (without protocol) to use for indexing.

  DocumentMetadataBucketArn:
    Type: String
    Description: The bucket ARN where document metadata is stored.

  DocumentMetadataBucketName:
    Type: String
    Description: The bucket name where document metadata is stored.

  DocumentExtractedBucketArn:
    Type: String
    Description: The bucket ARN where the extracted document is stored.

  DocumentExtractedBucketName:
    Type: String
    Description: The bucket name where the extracted document is stored.

  TextExtractorStatusTopicArn:
    Type: String
    Description: The SNS Topic ARN that posts text extractor status (when text documents are made available).

Resources:

  IndexerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub obp-indexer-exec-role-${Environment}
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - 
          PolicyName: !Sub obp-allow-get-to-document-buckets-${Environment}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Resource:
                  - !Join [ '/', [ !Ref DocumentMetadataBucketArn, '*' ] ]
                  - !Ref DocumentMetadataBucketArn
                Action:
                  - "S3:GetObject"
              -
                Effect: "Allow"
                Resource:
                  - !Join [ '/', [ !Ref DocumentExtractedBucketArn, '*' ] ]
                  - !Ref DocumentExtractedBucketArn
                Action:
                  - "S3:GetObject"

      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  
  IndexerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub obp-indexer-function-${Environment}
      Description: Responsible for percolating (tagging) and indexing document metadata based on a given document UID
      Handler: indexer.handler
      Runtime: nodejs12.x
      Timeout: 300
      Role: !GetAtt IndexerExecutionRole.Arn
      Environment:
        Variables:
          DOCUMENT_METADATA_BUCKET: !Ref DocumentMetadataBucketName
          DOCUMENT_CONTENT_BUCKET: !Ref DocumentExtractedBucketName
          ELASTIC_SEARCH_HOST: !Ref ElasticSearchHost
      CodeUri: .

  InvokeIndexerFromSNSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt IndexerFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "sns.amazonaws.com"
      SourceArn: !Ref TextExtractorStatusTopicArn

  TextExtractorStatusSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt IndexerFunction.Arn
      Protocol: lambda
      TopicArn: !Ref TextExtractorStatusTopicArn
